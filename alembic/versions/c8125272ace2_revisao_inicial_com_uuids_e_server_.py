"""Revisao inicial com UUIDs e server_default

Revision ID: c8125272ace2
Revises: 
Create Date: 2025-10-29 09:15:16.582640

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'c8125272ace2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artefato',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artefato_nome'), 'artefato', ['nome'], unique=False)
    op.create_table('card',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('status', sa.Enum('a_fazer', 'em_andamento', 'validacao', 'concluido', name='cardstatus'), nullable=False),
    sa.Column('tempo_planejado_horas', sa.Float(), nullable=False),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('ciclo_id', sa.UUID(), nullable=False, foreign_key='ciclo.id'),
    sa.Column('fase_id', sa.UUID(), nullable=False, foreign_key='fase.id'),
    sa.Column('artefato_id', sa.UUID(), nullable=False, foreign_key='artefato.id'),
    sa.Column('responsavel_id', sa.UUID(), nullable=False, foreign_key='usuario.id'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_card_status'), 'card', ['status'], unique=False)
    op.create_table('ciclo',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('versao', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('projeto_id', sa.UUID(), nullable=False, foreign_key='projeto.id'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ciclo_nome'), 'ciclo', ['nome'], unique=False)
    op.create_table('fase',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('descritivo', sa.Text(), nullable=True),
    sa.Column('ordem', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fase_nome'), 'fase', ['nome'], unique=False)
    op.create_table('faseartefato',
    sa.Column('fase_id', sa.UUID(), nullable=False, foreign_key='fase.id'),
    sa.Column('artefato_id', sa.UUID(), nullable=False, foreign_key='artefato.id'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('fase_id', 'artefato_id')
    )
    op.create_table('projeto',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('descritivo', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projeto_nome'), 'projeto', ['nome'], unique=False)
    op.create_table('projetousuario',
    sa.Column('projeto_id', sa.UUID(), nullable=False, foreign_key='projeto.id'),
    sa.Column('usuario_id', sa.UUID(), nullable=False, foreign_key='usuario.id'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('projeto_id', 'usuario_id')
    )
    op.create_table('usuario',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('nome', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('senha', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usuario_email'), 'usuario', ['email'], unique=True)
    op.create_index(op.f('ix_usuario_nome'), 'usuario', ['nome'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_usuario_nome'), table_name='usuario')
    op.drop_index(op.f('ix_usuario_email'), table_name='usuario')
    op.drop_table('usuario')
    op.drop_table('projetousuario')
    op.drop_index(op.f('ix_projeto_nome'), table_name='projeto')
    op.drop_table('projeto')
    op.drop_table('faseartefato')
    op.drop_index(op.f('ix_fase_nome'), table_name='fase')
    op.drop_table('fase')
    op.drop_index(op.f('ix_ciclo_nome'), table_name='ciclo')
    op.drop_table('ciclo')
    op.drop_index(op.f('ix_card_status'), table_name='card')
    op.drop_table('card')
    op.drop_index(op.f('ix_artefato_nome'), table_name='artefato')
    op.drop_table('artefato')
    # ### end Alembic commands ###
